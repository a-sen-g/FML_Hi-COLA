#### Give the model its name
model_name = 'ESS-A'
# Here quantities related to objects in reduced Horndeski action are defined
##################
# Mass ratios #
#################
# If True, all mass ratios are set to 1 and values below are ignored
set_all_to_one = True

M_pG4 = 1.
M_KG4 = 1.
M_G3s = 1. 
M_sG4 = 1.
M_G3G4 = 1.
M_Ks = 1.
M_gp = 1.

##################
# Theory symbols #
##################
# Here you declare the symbols needed to construct your specific theory.
# Typically this involves giving names to the constants in the model.

#Syntax: left side is the variable name that python will call it by, right is a
# string that indicates how the symbol should be displayed (use LaTeX notation)
# the variable name (key) MUST end in "_parameter" (without quotation marks)
#k1, g31, g32, k2 = sym.symbols("k_1 g_{31} g_{32} k_2")
k1_symbol = "k_1"
k2_symbol =  "k_2"
g31_symbol = "g_31"
g32_symbol = "g_32"


#######################
# Horndeski functions #
#######################

# See documentation for meaning of these functions

K = k1*X


G3 = g31*M_sG4*X/M_pG4


G4 = 0.5 

# Horndeski Parameter values
# Set values for the parameters, i.e. constants, introduced in your Horndeski function definitions.
# The key for these parameters must end in _parameter
# The order in which they are defined matter!

k1_parameter  = -0.11442716734931437
k2_parameter = -0.29293354841424546
g31_parameter = -1.9452618449383468
g32_parameter = 1.0405243750964335

#######################
# Closure declaration #
#######################
# Here you decide which variable is solved for via the Friedmann-like closure equation

# This indicates that the variable to be chosen is either the Hubble function, phi_prime, Omega_m or Omega_r
# If this is false, then one of the Horndeski model parameters will be solved through the closure equation instead
use_constraint_eq_on_odeint_parameters = True

# This specifies which odeint variable
# 0 = Hubble function; 1 = phi_prime; 2 = Omega_r; 3 = Omega_m
which_odeint_par = 1

# Determined by the order in which the Horndeski parameters are written above
# Only relevant if use_constraint_eq_on_odeint_variables is False
which_Horndeski_par = 0